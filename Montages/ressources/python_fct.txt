biblio numpy :
	savetxt pour enregistrer une variable dans un fichier
	loadtxt pour recharger une variable dans un fichier

[::-1] : reverse a list (extended slice)

[a:b] : points de la liste de a inclus à b exclu
[a:]  : a jusqu'au dernier
[:b]  : du premier à b exclus

ajouter des termes à une liste : liste+[a,...,b]

supprimer un élément d'une liste : del(liste[a])

copier une liste sans garder la référence (pour qu'ils soient indépendants après) : y=list(x) ou y=x[:] (copie explicit)

;  placer 2 commandes sur la meme ligne (command1; command2)

round(a) : arrondi à lientier le + proche
round(a,n) : arrondi avec n chiffres

fct : arguments entre crochets : optionnels

help(fct) : avoir la doc de la fct

len() : length

sorted : arrange ds l'ordre croissant
sorted(x,reverse=True) : ordre décroissant

everything is an objects
methods : fct that belong to objects
appeler les methods d'un obejct x : x.methodname
ex : list -> x.index(y) : donne l'indice où on trouve y
		x.count(y) : donne le nb de fois que la valeur y apparait dans x

y.append(x) : ajoute x à la liste y
y.reverse() : inverse l'ordre des elements

import package, ex: import numpy
			import numpy as np
		on peut aussi juste importer une methode : from numpy import array
		pi est dans math
		numpy : permet opérations sur array (numpy aray defini par np.array(liste))
		scipy package, linalg sub-package 

numpy array : contain only one type
		une addition sera sur les éléments et non une concaténation
		peut faire des masques
		si on mélange booléen et float -> True remplacé par 1, False remplacé par 0
		si on mélanger str et float -> tout en str
		
2D numpy array : ndarray=N-dimensionnel array
		shape : attibute of the ndarray
		x[i][j] : meme result que x[i,j]

statistics : np.mean, np.median, np.corrcoef (correlation), np.std
		np.random.normal(mean,std,nb)
		np.column_stack

==, !=, >, <
& : et
| : ou
^ : ou exclusif


__________

Cours Agreg
-> on ne déclare pas les variables, les blocs sont déterminés par les ":" et l'indentation, Python est sensible à la casse

dans les fonctions, très intéressant de fixer des valeurs par défaut
aussi, mettre explicitement le nom des variables dans l'appel à la fonction, permet de les mettre dans l'ordre qu'on veut

précision relative 10^-15 (cf mantisse)

des crochets [ ] pour les contenus

les listes sont comme des classeurs

i=complex(0,1)

numpy : large tableaux de données
evite les boucles
fonctions qui ne sont pas dans maths
en pratique, jms math

math ne sait pas calculer sur numpy


plot(X,Y)
loglog(X,Y), semilogx(X,Y), semilogy(X,Y)
errorbar(X,Y,xer=sig_x,yer=sig_y)
subplot(nx,ny,m)
xlim()
ylim()
grid(True)
text() -> faire des formules latex par ex. 
mettre 'r' avant le texte en ' ' pour latex interprétation
scope

gir hub prepa_agreg_montrouge, interfaçage